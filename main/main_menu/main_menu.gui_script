local SET = require("main/modules/settings")
local UI = require("main/modules/ui")
local TEXT = require("main/modules/text")

local nodes

--[[

O AkordCorpu
Most Wanted
Zprávy
EULA

--]]




function init(self)
	nodes = {
		logo = {
			left = gui.get_node("logo_left"),
			right = gui.get_node("logo_right"),
			text = gui.get_node("logo_text")
		},
		menu = {
			about = gui.get_node("about/button_box"),
			news = gui.get_node("news/button_box"),
			wanted = gui.get_node("wanted/button_box"),
		},
		about = {
			dialog = gui.get_node("dialog_about"),
			text = gui.get_node("about_text")
		},
		news = {
			dialog = gui.get_node("dialog_news")
		},
		eula = {
			dialog = gui.get_node("dialog_eula")
		}
	}
	gui.set_enabled(nodes.about.dialog, false)
	gui.set_enabled(nodes.news.dialog, false)
	gui.set_enabled(nodes.eula.dialog, false)
	gui.animate(nodes.logo.left, "position", vmath.vector3(25, 613, 0), go.EASING_OUTCUBIC, 1)
	gui.animate(nodes.logo.right, "position", vmath.vector3(50, 613, 0), go.EASING_OUTCUBIC, 1)
	gui.animate(nodes.logo.left, "scale", vmath.vector3(0.25, 0.25, 0.25), go.EASING_OUTCUBIC, 1)
	gui.animate(nodes.logo.right, "scale", vmath.vector3(0.25, 0.25, 0.25), go.EASING_OUTCUBIC, 1, 0, function()
		TEXT.write(nodes.logo.text, "AkordCorp", 0.1)
		for key, val in pairs(nodes.menu) do
			gui.animate(val, "color.w", 1, gui.EASING_INCUBIC, 1)
		end
		UI.load_template({"about", "news", "wanted", "eula"})
		msg.post(".", "acquire_input_focus")
	end)
end

function on_message(self, message_id, message, sender)
	if message_id == hash("template_clicked") then
		if message.type == hash("button") then
			if message.template == "about" then
				local messages = {"AkordCorp je a bude.", "Vy jste budoucností AkordCorpu.", "AkordCorp ví všechno líp.", "AkordCorp je život", "Pijte Perličku!"}
				UI.unload_template()
				gui.set_text(nodes.about.text, messages[math.random(1, #messages)])
				gui.set_enabled(nodes.about.dialog, true)
				UI.load_template({"about_ok"})
			elseif message.template == "about_ok" then
				UI.unload_template()
				gui.set_enabled(nodes.about.dialog, false)
				UI.load_template({"about", "news", "wanted", "eula"})
			elseif message.template == "news" then
				UI.unload_template()
				gui.set_enabled(nodes.news.dialog, true)
				UI.load_template({"news_ok"})
			elseif message.template == "news_ok" then
				UI.unload_template()
				gui.set_enabled(nodes.news.dialog, false)
				UI.load_template({"about", "news", "wanted", "eula"})
			elseif message.template == "wanted" then
				sys.open_url("http://www.hamba.cz")
			elseif message.template == "eula" then
				UI.unload_template()
				gui.set_enabled(nodes.eula.dialog, true)
				UI.load_template({"eula_accept_1", "eula_accept_2"})
			elseif message.template == "eula_accept_1" or message.template == "eula_accept_2" then
				UI.unload_template()
				gui.set_enabled(nodes.eula.dialog, false)
				UI.load_template({"about", "news", "wanted", "eula"})
			end
		end
	end
end

function on_input(self, action_id, action)
	if action_id == hash("touch") and action.pressed then
		for key, val in ipairs(UI.active) do
			if val.type == hash("button") then
				local node = gui.get_node(val.template.."/button_box")
				if gui.pick_node(node, action.x, action.y) then
					msg.post("#", hash("template_clicked"), {template = val.template, type = val.type})
				end
			--[[
			elseif val.type == hash("checkbox") then
				local node = gui.get_node(val.template.."/checkbox")
				if gui.pick_node(node, action.x, action.y) then
					local states = {[true] = {sound = "/sound#ui_close", image = "check_false"}, [false] = {sound = "/sound#ui_open", image = "check_true"}}
					sound.play(states[val.state].sound)
					gui.play_flipbook(node, states[val.state].image)
					val.state = not val.state
					msg.post("#", hash("template_clicked"), {state = val.state, template = val.template, type = val.type})
				end
			--]]
			end
		end
	end
end