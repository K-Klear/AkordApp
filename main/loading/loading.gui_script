
local path = sys.get_application_path()
local engine = sys.get_engine_info()
local system = sys.get_sys_info()
--sys.open_url("http://www.hamba.cz/")

local nodes, co

local function write(node, text, speed)
	local length, current_letter, text_timer = string.len(text), 1
	text_timer = timer.delay(speed, true, function()
		gui.set_text(node, gui.get_text(node)..string.sub(text, current_letter, current_letter))
		current_letter = current_letter + 1
		if current_letter > length then timer.cancel(text_timer); coroutine.resume(co) end
	end)
	coroutine.yield(co)
end

local function wait(time)
	timer.delay(time, false, function() coroutine.resume(co) end)
	coroutine.yield(co)
end

function init(self)
	nodes = {
		console = gui.get_node("console")
	}
	co = coroutine.create(function()
		write(nodes.console, "AkordApp version "..sys.get_config("project.version").."      \n", 0.05)
		write(nodes.console, "Engine version "..engine.version.." \n", 0.05)
		wait(0.3)
		write(nodes.console, "\nInitializing ...", 0.02)
		write(nodes.console, ".....", 0.1)
		write(nodes.console, "...", 0.7)
		write(nodes.console, "..", 0.9)
		write(nodes.console, "................", 0.03)
		write(nodes.console, "................................", 0.005)
		write(nodes.console, " done!", 0.001)
		wait(0.3)
		write(nodes.console, "\nConnecting to AkordCorp mainframe ", 0.05)
		write(nodes.console, ".........", 0.1)
		write(nodes.console, " done!", 0.001)
	end)

	coroutine.resume(co)

--	write(nodes.console, "T\n TESTING 1 2 3 4 5", 0.1)
	--gui.set_text(, "System found: "..data3.system_name.." "..data3.device_model.." "..data3.api_version.." "..data3.manufacturer.." "..data3.device_ident.." "..data3.user_agent)
	--gui.set_text(gui.get_node("console1"), "System found: "..data3.system_name.." "..data3.device_model.." "..data3.api_version.." "..data3.manufacturer.." "..data3.device_ident.." "..data3.user_agent)
	--pprint(data3)
end

function loading()

end


function on_message(self, message_id, message, sender)
	
end

function on_input(self, action_id, action)
	
end